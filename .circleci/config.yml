# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

jobs:
  run-lint-test:
    docker:
      - image: python:3.7

    working_directory: ~/project

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            python3 -m venv ~/.devops
            source ~/.devops/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
        
      - run:
          name: run lint
          command: |
            python3 -m venv ~/.devops
            source ~/.devops/bin/activate
            make lint

  build-docker-image:
    # docker:
    #   - image: docker:18.05.0-ce-git
    machine:
      image: ubuntu-2004:2022.07.1
    steps:
      - checkout
      - run:
          name: Build application Docker image
          command: |
            docker build -t handuy1992/final-proj .
      - run:
          name: Push application Docker image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push handuy1992/final-proj

  deploy-k8s:
    docker:
      - image: handuy1992/eks:v2
    steps:
      - checkout
      - run:
          name: Deploy K8S cluster
          command: |
            ansible-playbook ansible/main.yml

  deploy-app:
    docker:
      - image: handuy1992/eks:v2
    steps:
      - checkout
      - run:
          name: Deploy app on K8S cluster
          command: |
            aws eks update-kubeconfig --region ap-southeast-1 --name udacity
            kubectl run --image=nginx app

workflows:
  default:
    jobs:
      - run-lint-test:
          filters:
            branches:
              only: [master]
      - build-docker-image:
          requires: [run-lint-test]
          filters:
            branches:
              only: [master]
      - deploy-k8s:
          filters:
            branches:
              only: [deploy]
      - deploy-app:
          filters:
            branches:
              only: [deploy]